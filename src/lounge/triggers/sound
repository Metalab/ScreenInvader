#!/bin/bash
#
# ScreenInvader - A shared media experience. Instant and seamless.
#  Copyright (C) 2012 Amir Hassan <amir@viel-zu.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


. /lounge/triggers/functions.sh
l_log $@

FUNCTION="$1"
declare -A DATA="`janosh get /sound/.`"

function setMute() {
  m="on";
  [ "${DATA[/sound/mute]}" == "true" ] && m="off";
  amixer sset "${DATA[/sound/mixer]}" "$m"
}

function setVolume() {
  amixer sset "${DATA[/sound/mixer]}" "${DATA[/sound/volume]}%"
  janosh set /sound/volume "$(readVolume)"
}

function readVolume() {
  amixer sget "${DATA[/sound/mixer]}" | grep -Po 'Playback.*\[\K.*?(?=%)' | head -n1
}

function readMute() {
  [ "`amixer sget "${DATA[/sound/mixer]}" | grep -Po ' \[\K(on|off)?(?=])'`" == "on" ] && echo false || echo true
}

function readAllMixers() {
  amixer scontrols | grep -Po "Simple mixer control.*\'\K.*?(?=\')"
}

function readMixer() {
  mixer="Master"

  if [ -z "`amixer sget "Master"`" ]; then
    mixer="PCM"
  fi

  if [ -z  "`amixer sget "PCM"`" ]; then
    mixer="$(readAllMixers | head -n1)"
  fi
  echo "$mixer"
}

function reload() {
  readAllMixers | xargs -Imixer -n1 /usr/bin/amixer sset "mixer" "100%"
  janosh set /sound/volume "$(readVolume)" /sound/mute "$(readMute)" /sound/mixer "$(readMixer)"
}

function restart() {
  return 0
}


if [ "$(type -t "$FUNCTION")" == "function" ]; then
  $FUNCTION
else
  echo "Unknown command: $FUNCTION" 1>&2
  exit 1
fi


